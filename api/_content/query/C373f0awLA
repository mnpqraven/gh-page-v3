{"_path":"/blog/dev/2","_draft":false,"_partial":false,"_empty":false,"title":"Dynamic Route","description":"This is getting messy real quick","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"dynamic-route"},"children":[{"type":"text","value":"Dynamic Route"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Took me a long time to get the simple blog route. Haven't done anything like this so it feels really weird to me at first but I think I'm slowly getting it"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ContentDoc"}]},{"type":"text","value":" component grab the content file, that much is simple. But to get the parameters of the dynamic content file("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[...slug]"}]},{"type":"text","value":" files) we need to use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useRoute"}]},{"type":"text","value":" and access the parameters with "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"params.slug"}]}]},{"type":"element","tag":"code","props":{"code":"const route = useRoute()\nconst slug = route.params.slug\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const route = useRoute()\nconst slug = route.params.slug\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"slug"}]},{"type":"text","value":" should now give us the param of the file, in this case the route path. We can pipe this into "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" to have a dynamic api call grabbing the metadatas .e.g "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"publishedAt"}]}]}]},"publishedAt":"12-07-2022","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"dynamic-route"},"children":[{"type":"text","value":"Dynamic Route"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Took me a long time to get the simple blog route. Haven't done anything like this so it feels really weird to me at first but I think I'm slowly getting it"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ContentDoc"}]},{"type":"text","value":" component grab the content file, that much is simple. But to get the parameters of the dynamic content file("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[...slug]"}]},{"type":"text","value":" files) we need to use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useRoute"}]},{"type":"text","value":" and access the parameters with "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"params.slug"}]}]},{"type":"element","tag":"code","props":{"code":"const route = useRoute()\nconst slug = route.params.slug\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const route = useRoute()\nconst slug = route.params.slug\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"slug"}]},{"type":"text","value":" should now give us the param of the file, in this case the route path. We can pipe this into "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" to have a dynamic api call grabbing the metadatas .e.g "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"publishedAt"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:blog:dev:2.md","_source":"content","_file":"blog/dev/2.md","_extension":"md"}